bb0:
BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: examples/ssahli.rs:7:5: 7:18, scope: scope0 }, kind: tmp0 = hello_world() -> bb1 }), is_cleanup: false }
bb1:
BasicBlockData { statements: [tmp3 = &(*main::__STATIC_FMTSTR), tmp8 = ()], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: goto -> bb2 }), is_cleanup: false }
bb2:
BasicBlockData { statements: [tmp7 = []], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: goto -> bb3 }), is_cleanup: false }
bb3:
BasicBlockData { statements: [tmp6 = &tmp7, tmp5 = &(*tmp6), tmp4 = tmp5 as &[std::fmt::ArgumentV1<'_>] (Unsize)], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:2:27: 2:58, scope: scope0 }, kind: tmp2 = std::fmt::Arguments<'_>::new_v1(tmp3, tmp4) -> bb4 }), is_cleanup: false }
bb4:
BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:2:1: 2:60, scope: scope0 }, kind: tmp1 = std::io::_print(tmp2) -> bb5 }), is_cleanup: false }
bb5:
BasicBlockData { statements: [return = ()], terminator: Some(Terminator { source_info: SourceInfo { span: examples/ssahli.rs:6:1: 9:2, scope: scope0 }, kind: goto -> bb6 }), is_cleanup: false }
bb6:
BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: examples/ssahli.rs:6:1: 9:2, scope: scope0 }, kind: return }), is_cleanup: false }
bb0:
BasicBlockData { statements: [tmp2 = &(*hello_world::__STATIC_FMTSTR), tmp7 = ()], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: goto -> bb1 }), is_cleanup: false }
bb1:
BasicBlockData { statements: [tmp6 = []], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: goto -> bb2 }), is_cleanup: false }
bb2:
BasicBlockData { statements: [tmp5 = &tmp6, tmp4 = &(*tmp5), tmp3 = tmp4 as &[std::fmt::ArgumentV1<'_>] (Unsize)], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:2:27: 2:58, scope: scope0 }, kind: tmp1 = std::fmt::Arguments<'_>::new_v1(tmp2, tmp3) -> bb3 }), is_cleanup: false }
bb3:
BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:2:1: 2:60, scope: scope0 }, kind: tmp0 = std::io::_print(tmp1) -> bb4 }), is_cleanup: false }
bb4:
BasicBlockData { statements: [return = ()], terminator: Some(Terminator { source_info: SourceInfo { span: examples/ssahli.rs:11:1: 13:2, scope: scope0 }, kind: goto -> bb5 }), is_cleanup: false }
bb5:
BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: examples/ssahli.rs:11:1: 13:2, scope: scope0 }, kind: return }), is_cleanup: false }
bb0:
BasicBlockData { statements: [tmp2 = [const "Goodbye, world!\n"], tmp1 = &tmp2, tmp0 = &(*tmp1), return = tmp0 as &'static [&'static str] (Unsize)], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: goto -> bb1 }), is_cleanup: false }
bb1:
BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: return }), is_cleanup: false }
bb0:
BasicBlockData { statements: [tmp2 = [const "Hello, world!\n"], tmp1 = &tmp2, tmp0 = &(*tmp1), return = tmp0 as &'static [&'static str] (Unsize)], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: goto -> bb1 }), is_cleanup: false }
bb1:
BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: <std macros>:1:33: 1:58, scope: scope0 }, kind: return }), is_cleanup: false }
